apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField('String', 'VERSION_NAME', "\"$version\"")
        }

        debug {
            buildConfigField('String', 'VERSION_NAME', "\"$version\"")
        }
    }
}

def version = ['sh', '-c', 'git describe --tag 2> /dev/null || git rev-parse --short HEAD'].execute().text.trim()

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
}

ext {
    okHttpVersion = "4.9.1"
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.security:security-crypto:1.1.0-alpha03'

    implementation "com.squareup.retrofit2:retrofit:2.3.0"
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    api "com.squareup.okhttp3:okhttp:${okHttpVersion}"

    implementation 'com.nimbusds:nimbus-jose-jwt:9.5'

    testImplementation 'junit:junit:4.12'
    testImplementation 'io.mockk:mockk:1.10.5'
    testImplementation "com.squareup.okhttp3:mockwebserver:${okHttpVersion}"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

tasks.withType(Test) {
    testLogging {
        events "started", "passed", "skipped", "failed"
    }
}
